# 要求3：将httpserver部署到k8s
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    prometheus.io/port: http-metrics
    prometheus.io/scrape: "true"
  name: httpserver-cncamp-com
  namespace: pro
  labels:
    projectName: httpserver-cncamp-com
    projectType: golang
    gary: "false"
spec:
  replicas: 3
  revisionHistoryLimit: 10
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 0
  selector:
    matchLabels:
      projectName: httpserver-cncamp-com
      projectType: golang
      gary: "false"
  template:
    metadata:
      labels:
        projectName: httpserver-cncamp-com
        projectType: golang
        gary: "false"
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: projectName
                operator: In
                values:
                - httpserver-cncamp-com
            topologyKey: "kubernetes.io/hostname"
      imagePullSecrets:
        - name: aliyun-registry
      containers:
      - name: httpserver-cncamp-com
        image: 'httpserver-cncamp-com:latest'
        imagePullPolicy: Always
        lifecycle:
          postStart:
            exec:
              command: ["/bin/sh", "-c", "you can do something"]
          preStop:
            exec:
              command: ["/bin/sh", "-c", "you can do something，我们会给抓一些问题项目的内存报告传到对象存储里"]
        resources:
          requests:
            memory: 1Gi
            cpu: 500m
          limits:
            memory: 4Gi
            cpu: 2
        ports:
        - name: http-metrics
          containerPort: 8000
          protocol: TCP
        startupProbe:
          httpGet:
            path: /healthz/
            port: 8000
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 15
          timeoutSeconds: 10
          successThreshold: 1
          failureThreshold: 10
        readinessProbe:
          httpGet:
            path: /healthz/
            port: 8000
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 15
          timeoutSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /healthz/
            port: 8000
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 15
          timeoutSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        env:
        - name: projectName
          value: "httpserver-cncamp-com"
        - name: VERSION
          valueFrom:
            configMapKeyRef:
              name: httpserver-configmap
              key: VERSION
